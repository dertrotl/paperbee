name: Test LLM Filtering and bioRxiv Fix

on:
  workflow_dispatch:

jobs:
  test-llm-biorxiv:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        
      - name: Install dependencies
        run: |
          poetry install
          # Install requests explicitly for network testing
          poetry run pip install requests
        
      - name: Create dummy Google credentials
        run: |
          echo '{
            "type": "service_account",
            "project_id": "dummy-test-project",
            "private_key_id": "dummy-key-id",
            "private_key": "-----BEGIN PRIVATE KEY-----\nDUMMY_PRIVATE_KEY_FOR_TESTING_ONLY\n-----END PRIVATE KEY-----\n",
            "client_email": "dummy@dummy.iam.gserviceaccount.com",
            "client_id": "dummy-client-id",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token"
          }' > dummy_google_creds.json
        
      - name: Create test config
        run: |
          cat << 'EOF' > test_config.yml
          GOOGLE_SPREADSHEET_ID: "dummy_test_id"
          GOOGLE_CREDENTIALS_JSON: "./dummy_google_creds.json"
          NCBI_API_KEY: "${NCBI_KEY}"
          LOCAL_ROOT_DIR: "."
          databases: ["pubmed", "biorxiv"]
          
          # Test queries - SIMPLE for bioRxiv debugging
          query_biorxiv: "[computational biology]"
          query_pubmed_arxiv: "[computational biology]"
          
          limit: 5
          limit_per_database: 2
          
          # LLM Configuration - DISABLED for debugging
          LLM_FILTERING: false
          
          # DISABLE ALL POSTING - No Google Sheets writing!
          SLACK:
            is_posting_on: false
          TELEGRAM:
            is_posting_on: false
          ZULIP:
            is_posting_on: false
          EOF
    
      - name: Test Network Connectivity to bioRxiv
        run: |
          echo "üåê Testing Network Connectivity to bioRxiv API"
          echo "=============================================="
          
          # Test DNS resolution
          echo "üîç DNS Resolution Test:"
          nslookup api.biorxiv.org || echo "‚ùå DNS resolution failed"
          
          # Test HTTP connectivity
          echo ""
          echo "üîó HTTP Connectivity Test:"
          curl -I https://api.biorxiv.org/ --max-time 10 || echo "‚ùå HTTP connection failed"
          
          # Test specific bioRxiv endpoint
          echo ""
          echo "üì° bioRxiv API Endpoint Test:"
          curl -s https://api.biorxiv.org/details/biorxiv/2025-09-20/2025-09-24 --max-time 10 | head -100 || echo "‚ùå bioRxiv API call failed"
          
          # Test from Python
          echo ""
          echo "üêç Python HTTP Test:"
          poetry run python -c "
          import requests
          try:
              response = requests.get('https://api.biorxiv.org/', timeout=10)
              print(f'‚úÖ bioRxiv API responded with status: {response.status_code}')
          except Exception as e:
              print(f'‚ùå Python request failed: {e}')
          " || echo "‚ö†Ô∏è Python test failed, but continuing..."

      - name: Test Direct bioRxiv API
        run: |
          echo "üß¨ Testing Direct bioRxiv API Client"
          echo "=================================="
          python test_direct_biorxiv.py

      - name: Test LLM and bioRxiv
        env:
          NCBI_KEY: ${{ secrets.NCBI_API_KEY }}
          GEMINI_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "üß™ Testing LLM Filtering and bioRxiv Fix"
          echo "üìÖ Search window: 1 day back"
          echo ""
          
          echo "‚úÖ Test config created"
          echo "üéØ Testing LLM filtering and bioRxiv dual-date system..."
          
          # Run the full test
          echo ""
          echo "üöÄ Running full PaperBee test..."
          poetry run paperbee post --config test_config.yml --since 1
          
      - name: Clean up
        if: always()
        run: |
          rm -f dummy_google_creds.json test_config.yml