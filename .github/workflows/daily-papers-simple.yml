# .github/workflows/daily-papers.yml
name: Paper Fetch (Back to Working Version)

on:
  schedule:
    - cron: '0 9 * * 1-5'  # Monday-Friday at 9 AM UTC
  workflow_dispatch:

jobs:
  fetch-papers:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Increased for rate-limited processing
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install -e .  # Your modified fork (ONLY for Gemini support)
          
      - name: Create Google credentials file
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > google-credentials.json
          
      - name: Determine search window
        id: search_days
        run: |
          DAY_OF_WEEK=$(date +%u)
          if [ "$DAY_OF_WEEK" -eq 1 ]; then
            echo "since_days=2" >> $GITHUB_OUTPUT
            echo "Monday: 2 days"
          else
            echo "since_days=1" >> $GITHUB_OUTPUT
            echo "Weekday: 1 day"  
          fi
          
      - name: Create config with Python (avoid YAML issues)
        env:
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SPREADSHEET_ID }}
          NCBI_KEY: ${{ secrets.NCBI_API_KEY }}
          GEMINI_KEY: ${{ secrets.GEMINI_API_KEY }}
          SLACK_BOT: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_APP: ${{ secrets.SLACK_APP_TOKEN }}
          FILTER_PROMPT: ${{ secrets.FILTERING_PROMPT }}
        run: |
          # Use Python to avoid YAML formatting issues
          python3 << 'EOF'
          import yaml
          import os
          
          config = {
              "GOOGLE_SPREADSHEET_ID": os.environ.get("GOOGLE_SHEET_ID", ""),
              "GOOGLE_CREDENTIALS_JSON": "./google-credentials.json",
              "NCBI_API_KEY": os.environ.get("NCBI_KEY", ""),  # Fixed: restore NCBI key for validation
              "LOCAL_ROOT_DIR": ".",
              
              # SINGLE query that worked before (not split)
              "query": "[single-cell RNA sequencing] OR [spatial transcriptomics] OR [single-cell analysis] OR [scRNA-seq] OR [single cell atlas] OR [single-cell integration] OR [fibrosis] OR [IBD] OR [lung health] OR [COPD]",
              
              # Gemini support (the only thing we're adding)
              "LLM_FILTERING": True,
              "LLM_PROVIDER": "openai",
              "LANGUAGE_MODEL": "gemini-2.0-flash-lite",  # API auto-selects Flash-Lite (30 RPM)
              "OPENAI_API_KEY": os.environ.get("GEMINI_KEY", ""),
              "OPENAI_BASE_URL": "https://generativelanguage.googleapis.com/v1beta/openai/",
              "FILTERING_PROMPT": os.environ.get("FILTER_PROMPT", "You are a research assistant. Is this paper relevant to single-cell biology and IBD research? Answer only yes or no."),
              
              "SLACK": {
                  "is_posting_on": True,
                  "bot_token": os.environ.get("SLACK_BOT", ""),
                  "channel_id": os.environ.get("SLACK_CHANNEL", ""),
                  "app_token": os.environ.get("SLACK_APP", "")
              },
              "TELEGRAM": {"is_posting_on": False},
              "ZULIP": {"is_posting_on": False}
          }
          
          with open("config.yml", "w") as f:
              yaml.dump(config, f, default_flow_style=False)
          
          print("âœ… Config created successfully")
          EOF
          
      - name: Debug config
        run: |
          echo "=== Config ==="
          cat config.yml
          echo ""
          echo "Search window: ${{ steps.search_days.outputs.since_days }} days"
          
      - name: Run PaperBee (simple approach)
        run: |
          echo "Using SIMPLE single query approach (like before)"
          echo "Search window: ${{ steps.search_days.outputs.since_days }} days"
          paperbee post --config config.yml --since ${{ steps.search_days.outputs.since_days }}
          
      - name: Clean up
        if: always()
        run: |
          rm -f google-credentials.json config.yml
