# .github/workflows/daily-papers.yml
name: Daily Paper Fetch (Gemini Fork - Fixed)

on:
  schedule:
    - cron: '0 9 * * *'  # Daily at 9 AM UTC
  workflow_dispatch:

jobs:
  fetch-papers:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install -e .  # Install your modified fork
          
      - name: Create Google credentials file
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > google-credentials.json
          
      - name: Create config file (Python-generated YAML)
        env:
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SPREADSHEET_ID }}
          NCBI_KEY: ${{ secrets.NCBI_API_KEY }}
          GEMINI_KEY: ${{ secrets.GEMINI_API_KEY }}
          SLACK_BOT: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_APP: ${{ secrets.SLACK_APP_TOKEN }}
          QUERY_BIORXIV: ${{ secrets.QUERY_BIORXIV }}
          QUERY_PUBMED_ARXIV: ${{ secrets.QUERY_PUBMED_ARXIV }}
          FILTER_PROMPT: ${{ secrets.FILTERING_PROMPT }}
        run: |
          # Use Python to create properly formatted YAML
          python3 << 'EOF'
          import yaml
          import os
          
          config = {
              "GOOGLE_SPREADSHEET_ID": os.environ.get("GOOGLE_SHEET_ID", ""),
              "GOOGLE_CREDENTIALS_JSON": "./google-credentials.json", 
              "NCBI_API_KEY": os.environ.get("NCBI_KEY", ""),
              "LOCAL_ROOT_DIR": ".",
              
              # Use your sophisticated query structure
              "query_biorxiv": os.environ.get("QUERY_BIORXIV") or "[single-cell RNA sequencing] OR [spatial transcriptomics] OR [single-cell analysis] OR [scRNA-seq] OR [single cell atlas] OR [single-cell integration] OR [multiomics] OR [organoids] OR [IBD] OR [Crohn disease] OR [ulcerative colitis] OR [inflammasome] OR [NLRP3] OR [immunodeficiency] OR [autoinflammation] OR [computational pathology] OR [intestinal epithelial] OR [VEO-IBD]",
              "query_pubmed_arxiv": os.environ.get("QUERY_PUBMED_ARXIV") or "([single-cell RNA sequencing] OR [spatial transcriptomics] OR [scRNA-seq] OR [single cell atlas] OR [organoids] OR [IBD] OR [inflammasome]) AND ([computational biology] OR [bioinformatics] OR [machine learning] OR [multiomics] OR [immunology]) AND NOT ([cancer] OR [tumor])",
              
              "LLM_FILTERING": True,
              "LLM_PROVIDER": "openai", 
              "LANGUAGE_MODEL": "gemini-1.5-flash",
              "OPENAI_API_KEY": os.environ.get("GEMINI_KEY", ""),
              "OPENAI_BASE_URL": "https://generativelanguage.googleapis.com/v1beta/openai/",
              "FILTERING_PROMPT": os.environ.get("FILTER_PROMPT") or "You are a research assistant. Is this paper relevant to single-cell biology and IBD research? Answer only yes or no.",
              
              "SLACK": {
                  "is_posting_on": True,
                  "bot_token": os.environ.get("SLACK_BOT", ""),
                  "channel_id": os.environ.get("SLACK_CHANNEL", ""),
                  "app_token": os.environ.get("SLACK_APP", "")
              },
              "TELEGRAM": {"is_posting_on": False},
              "ZULIP": {"is_posting_on": False}
          }
          
          with open("config.yml", "w") as f:
              yaml.dump(config, f, default_flow_style=False)
          
          print("✅ YAML config created successfully")
          
          # Test parsing immediately
          with open("config.yml", "r") as f:
              test_config = yaml.safe_load(f)
              print(f"✅ YAML parsing test passed, found {len(test_config)} keys")
              if "query_biorxiv" in test_config:
                  print("✅ BioRxiv query structure found")
              if "query_pubmed_arxiv" in test_config:
                  print("✅ PubMed/arXiv query structure found")
          EOF
          
      - name: Debug config file (quick check)
        run: |
          echo "=== Generated config.yml ==="
          cat config.yml
          echo ""
          echo "=== Query structure ==="
          python3 -c "
          import yaml
          with open('config.yml', 'r') as f:
              config = yaml.safe_load(f)
              print('BioRxiv query length:', len(config.get('query_biorxiv', '')))
              print('PubMed/arXiv query length:', len(config.get('query_pubmed_arxiv', '')))
              print('LLM filtering:', config.get('LLM_FILTERING', False))
              print('Has proper query structure:', 'query_biorxiv' in config and 'query_pubmed_arxiv' in config)
          "
          
      - name: Run PaperBee (your modified fork)
        run: |
          paperbee post --config config.yml --since 1
          
      - name: Clean up
        if: always()
        run: |
          rm -f google-credentials.json config.yml
